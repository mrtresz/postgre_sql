-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.products_menu
(
    product_id bigserial NOT NULL,
    product_name character varying(50) NOT NULL,
    product_price double precision NOT NULL,
    PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.cart
(
    product_id bigserial NOT NULL,
    quantity integer NOT NULL,
    PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    user_id bigserial NOT NULL,
    username character varying(50) NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public."order"
(
    order_id bigserial NOT NULL,
    user_id bigserial NOT NULL,
    order_date date NOT NULL,
    PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.order_details
(
    order_id bigserial NOT NULL,
    product_id bigserial NOT NULL,
    quantity integer NOT NULL,
    PRIMARY KEY (order_id, product_id)
);

ALTER TABLE IF EXISTS public.cart
    ADD FOREIGN KEY (product_id)
    REFERENCES public.products_menu (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_details
    ADD FOREIGN KEY (order_id)
    REFERENCES public."order" (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_details
    ADD FOREIGN KEY (product_id)
    REFERENCES public.products_menu (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

-- insert products
INSERT INTO products_menu (product_name, product_price)
	VALUES('Coke', 10),('Chips', 5);  

-- inserting into cart
INSERT INTO cart (product_id, quantity)
	VALUES(1,2),(2,1);

-- inserting into users
INSERT INTO users (username)
	VALUES('Arnold'),
	('Sheryl');

-- inserting into order
INSERT INTO "order" (user_id, order_date)
	VALUES(2,date '2024-08-15') ;

INSERT INTO "order" (user_id, order_date)
	VALUES(1,date '2024-08-13' ) ;

select * from "order";

-- inserting into order_details
INSERT INTO order_details (order_id, product_id, quantity)
	VALUES
	(1, 1, 2 ),
	(1, 2, 1);


-- add a coke
INSERT INTO cart (product_id, quantity)
VALUES (1, 1)
ON CONFLICT (product_id)
DO UPDATE SET quantity = cart.quantity + 1;

-- add chips
INSERT INTO cart (product_id, quantity)
VALUES (2,1)
ON CONFLICT (product_id)
	DO UPDATE SET quantity = cart.quantity + 1;


-- subtract coke
UPDATE cart
SET quantity = quantity - 1
WHERE product_id = 1 AND quantity > 1;

-- subtract chips
UPDATE cart
	SET quantity = quantity -1
	WHERE product_id = 2 and quantity > 1;

-- delete coke from cart
DELETE FROM cart WHERE product_id = 1;

-- delete coke from cart
DELETE FROM cart WHERE product_id = 2;

-- delete everything from cart
TRUNCATE TABLE cart;

-- printing a single order
SELECT * FROM "order"
	INNER JOIN order_details ON "order".order_id = order_details.order_id LIMIT 1;

-- printing order from a single day
SELECT * FROM "order"
	INNER JOIN order_details ON "order".order_id = order_details.order_id
	WHERE DATE(order_date ) = '2024-08-15';
 END;